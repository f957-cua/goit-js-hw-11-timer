{"version":3,"sources":["webpack:///./index.js"],"names":["selector","targetDate","this","refs","timerId","document","querySelector","days","hours","mins","secs","time","date","start","timer","setInterval","currentDate","Date","now","getDateToTimer","getValueToInterval","Math","floor","textContent"],"mappings":"kHAAA,iBAqDiB,I,WAlDb,cAAsC,IAAxBA,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACpBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAClBC,KAAKC,KAAO,CACVC,QAASC,SAASC,cAAc,YAChCC,KAAMF,SAASC,cAAc,uBAC7BE,MAAOH,SAASC,cAAc,yBAC9BG,KAAMJ,SAASC,cAAc,uBAC7BI,KAAML,SAASC,cAAc,wBAE/BJ,KAAKS,KAAO,KACZT,KAAKU,KAAO,CACVL,KAAM,KACNC,MAAO,KACPC,KAAM,KACNC,KAAM,M,2BAIZG,MAAA,WACEX,KAAKY,S,EAGPA,MAAA,WAAQ,WACJC,aAAY,WACV,IAAMC,EAAcC,KAAKC,MACzB,EAAKP,KAAO,EAAKV,WAAae,EAE9B,EAAKG,iBACL,EAAKC,uBACJ,M,EAGPD,eAAA,WACIjB,KAAKU,KAAKL,KAAOc,KAAKC,MAAMpB,KAAKS,KAAL,OAC5BT,KAAKU,KAAKJ,MAAQa,KAAKC,MAAOpB,KAAKS,KAAL,MAAD,MAC7BT,KAAKU,KAAKH,KAAOY,KAAKC,MAAOpB,KAAKS,KAAL,KAAD,KAC5BT,KAAKU,KAAKF,KAAOW,KAAKC,MAAOpB,KAAKS,KAAL,IAA2B,M,EAI5DS,mBAAA,WACIlB,KAAKC,KAAKI,KAAKgB,YAAcrB,KAAKU,KAAKL,KACvCL,KAAKC,KAAKK,MAAMe,YAAcrB,KAAKU,KAAKJ,MACxCN,KAAKC,KAAKM,KAAKc,YAAcrB,KAAKU,KAAKH,KACvCP,KAAKC,KAAKO,KAAKa,YAAcrB,KAAKU,KAAKF,M,KAK9B,CAAmB,CAClCV,SAAU,WACVC,WAAY,IAAIgB,KAAK,kBAGdJ,U","file":"main.9a1cc94b32a1f6dcf713.js","sourcesContent":["import './styles.css';\n\nclass CountdownTimer {\n    constructor({ selector, targetDate }) {\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.refs = {\n          timerId: document.querySelector('.timer-1'),\n          days: document.querySelector('[data-value=\"days\"]'),\n          hours: document.querySelector('[ data-value=\"hours\"]'),\n          mins: document.querySelector('[data-value=\"mins\"]'),\n          secs: document.querySelector('[data-value=\"secs\"]')\n        };\n        this.time = null;\n        this.date = {\n          days: null,\n          hours: null,\n          mins: null,\n          secs: null,\n        }\n    }\n\n    start() {\n      this.timer();\n  }\n  \n    timer() {\n        setInterval(() => {\n          const currentDate = Date.now()\n          this.time = this.targetDate - currentDate;\n\n          this.getDateToTimer()\n          this.getValueToInterval()\n        }, 1000);\n  }\n\n    getDateToTimer() {\n        this.date.days = Math.floor(this.time / (1000 * 60 * 60 * 24));\n        this.date.hours = Math.floor((this.time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        this.date.mins = Math.floor((this.time % (1000 * 60 * 60)) / (1000 * 60));\n        this.date.secs = Math.floor((this.time % (1000 * 60)) / 1000);\n\n  }\n  \n    getValueToInterval() {\n        this.refs.days.textContent = this.date.days;\n        this.refs.hours.textContent = this.date.hours;\n        this.refs.mins.textContent = this.date.mins;\n        this.refs.secs.textContent = this.date.secs; \n  }\n}\n\n\nconst newTimer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 17, 2021'),\n});\n\nnewTimer.start();"],"sourceRoot":""}